
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##########################################################
> # author: Ignacio Sarmiento-Barbieri
> ##########################################################
> 
> #Clean the workspace
> rm(list=ls())
> cat("\014")
> local({r <- getOption("repos"); r["CRAN"] <- "http://cran.r-project.org"; options(repos=r)}) #set repo
> gc() # free up memory and report memory usage
         used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)
Ncells 275377 14.8     666865 35.7         NA   417476 22.3
Vcells 463384  3.6    8388608 64.0      32768  1824084 14.0
> 
> #Sys.getenv("LD_LIBRARY_PATH")
> #Load Packages
> pkg<-list("dplyr","here","caret","gbm","xgboost")
> lapply(pkg, require, character.only=T)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: here
here() starts at /Users/iggy/Dropbox/Research/Ethiopia/REMOTE_SENSING
Loading required package: caret
Loading required package: lattice
Loading required package: ggplot2
Loading required package: gbm
Loaded gbm 2.1.8
Loading required package: xgboost

Attaching package: ‘xgboost’

The following object is masked from ‘package:dplyr’:

    slice

[[1]]
[1] TRUE

[[2]]
[1] TRUE

[[3]]
[1] TRUE

[[4]]
[1] TRUE

[[5]]
[1] TRUE

> rm(pkg)
> 
> #set seed
> set.seed(10101)
> 
> 
> # Read data ---------------------------------------------------------------
> dta<-readRDS(here("data/crossectional_data.Rds"))
> 
> 
> # dta<-dta %>% mutate(ImpFor=ifelse(land_use=="Improved forage",1,0),
> #                     crop=ifelse(land_use=="Crop",1,0),
> #                     grazing=ifelse(land_use=="Grazing",1,0),
> #                     tree=ifelse(land_use=="Tree",1,0))
> 
> 
> 
> # Clean and prepare data --------------------------------------------------
> 
> dta<- dta %>% mutate(land_use=ifelse(land_use=="Improved forage","Improv_forage",land_use))
> 
> dta<- dta %>% mutate(land_use=factor(land_use))
> table(dta$land_use)

         Crop       Grazing          Tree Improv_forage 
         4647          6347          3930           363 
> covariate_names<-colnames(dta)
> covariate_names<- covariate_names[grepl('w_center',covariate_names)==FALSE]
> covariate_names<- covariate_names[grepl('summer|winter|fall|spring',covariate_names)==FALSE]
> covariate_names<- covariate_names[!(covariate_names%in%c("seasons","panel_id","Name","woreda","kebele"))]
> 
> 
> dta1<- dta %>% ungroup() %>% dplyr::select(land_use,covariate_names) 
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(covariate_names)` instead of `covariate_names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
> summary(dta1)
          land_use      mean.blue      mean.green      mean.red   
 Crop         :4647   Min.   :1802   Min.   :1894   Min.   :1837  
 Grazing      :6347   1st Qu.:2116   1st Qu.:2261   1st Qu.:2225  
 Tree         :3930   Median :2248   Median :2372   Median :2385  
 Improv_forage: 363   Mean   :2255   Mean   :2393   Mean   :2399  
                      3rd Qu.:2347   3rd Qu.:2492   3rd Qu.:2553  
                      Max.   :3038   Max.   :3153   Max.   :3042  
    mean.nir      mean.ndvi      mean_polygon.blue mean_polygon.green
 Min.   :2735   Min.   :0.0583   Min.   :1902      Min.   :2000      
 1st Qu.:3605   1st Qu.:0.2978   1st Qu.:2133      1st Qu.:2291      
 Median :3729   Median :0.3693   Median :2225      Median :2332      
 Mean   :3767   Mean   :0.3638   Mean   :2255      Mean   :2393      
 3rd Qu.:3913   3rd Qu.:0.4062   3rd Qu.:2330      3rd Qu.:2466      
 Max.   :4751   Max.   :0.5667   Max.   :2785      Max.   :2885      
 mean_polygon.red mean_polygon.nir mean_polygon.ndvi    sd.blue    
 Min.   :1959     Min.   :3219     Min.   :0.2180    Min.   :2870  
 1st Qu.:2278     1st Qu.:3665     1st Qu.:0.3062    1st Qu.:3153  
 Median :2329     Median :3739     Median :0.3667    Median :3272  
 Mean   :2399     Mean   :3767     Mean   :0.3638    Mean   :3308  
 3rd Qu.:2556     3rd Qu.:3823     3rd Qu.:0.4000    3rd Qu.:3436  
 Max.   :2901     Max.   :4425     Max.   :0.5267    Max.   :4048  
    sd.green        sd.red         sd.nir        sd.ndvi        sd_polygon.blue
 Min.   :2508   Min.   :2335   Min.   :1678   Min.   :0.09346   Min.   :2908   
 1st Qu.:2804   1st Qu.:2611   1st Qu.:2039   1st Qu.:0.23732   1st Qu.:3198   
 Median :2925   Median :2728   Median :2129   Median :0.25358   Median :3211   
 Mean   :2966   Mean   :2781   Mean   :2147   Mean   :0.25569   Mean   :3289   
 3rd Qu.:3101   3rd Qu.:2934   3rd Qu.:2245   3rd Qu.:0.27572   3rd Qu.:3403   
 Max.   :3713   Max.   :3564   Max.   :2732   Max.   :0.37073   Max.   :3938   
 sd_polygon.green sd_polygon.red sd_polygon.nir sd_polygon.ndvi 
 Min.   :2568     Min.   :2406   Min.   :1769   Min.   :0.1476  
 1st Qu.:2845     1st Qu.:2634   1st Qu.:2056   1st Qu.:0.2411  
 Median :2855     Median :2682   Median :2088   Median :0.2506  
 Mean   :2949     Mean   :2766   Mean   :2140   Mean   :0.2568  
 3rd Qu.:3083     3rd Qu.:2922   3rd Qu.:2220   3rd Qu.:0.2687  
 Max.   :3602     Max.   :3444   Max.   :2623   Max.   :0.3486  
    max.blue       max.green        max.red         max.nir     
 Min.   :11520   Min.   :10536   Min.   : 9864   Min.   : 9440  
 1st Qu.:12840   1st Qu.:11808   1st Qu.:11072   1st Qu.:10256  
 Median :14552   Median :12616   Median :11488   Median :10456  
 Mean   :14117   Mean   :12486   Mean   :11457   Mean   :10552  
 3rd Qu.:15144   3rd Qu.:13080   3rd Qu.:11800   3rd Qu.:10760  
 Max.   :16368   Max.   :14256   Max.   :13616   Max.   :13488  
    max.ndvi      max_polygon.blue max_polygon.green max_polygon.red
 Min.   :0.3345   Min.   :12136    Min.   :10960     Min.   :10280  
 1st Qu.:0.7758   1st Qu.:13216    1st Qu.:12312     1st Qu.:11544  
 Median :0.8285   Median :15216    Median :13248     Median :12080  
 Mean   :0.8157   Mean   :14600    Mean   :12946     Mean   :11984  
 3rd Qu.:0.8654   3rd Qu.:15840    3rd Qu.:13576     3rd Qu.:12432  
 Max.   :0.9977   Max.   :16368    Max.   :14256     Max.   :13616  
 max_polygon.nir max_polygon.ndvi    min.blue       min.green      min.red     
 Min.   :10008   Min.   :0.5535   Min.   :  1.0   Min.   :  1   Min.   :  1.0  
 1st Qu.:10624   1st Qu.:0.8823   1st Qu.: 38.0   1st Qu.:181   1st Qu.:145.0  
 Median :11336   Median :0.9027   Median : 92.0   Median :289   Median :215.0  
 Mean   :11282   Mean   :0.9124   Mean   :102.7   Mean   :295   Mean   :224.0  
 3rd Qu.:11936   3rd Qu.:0.9705   3rd Qu.:159.0   3rd Qu.:390   3rd Qu.:299.5  
 Max.   :13488   Max.   :0.9977   Max.   :522.0   Max.   :892   Max.   :711.0  
    min.nir          min.ndvi        min_polygon.blue min_polygon.green
 Min.   : 217.0   Min.   :-0.35172   Min.   :  1.00   Min.   :  1.0    
 1st Qu.: 677.0   1st Qu.:-0.06103   1st Qu.:  1.00   1st Qu.: 67.0    
 Median : 914.0   Median :-0.05601   Median :  1.00   Median :116.0    
 Mean   : 967.7   Mean   :-0.05756   Mean   : 28.02   Mean   :159.3    
 3rd Qu.:1174.0   3rd Qu.:-0.05102   3rd Qu.: 55.00   3rd Qu.:234.0    
 Max.   :2740.0   Max.   :-0.02530   Max.   :245.00   Max.   :632.0    
 min_polygon.red min_polygon.nir  min_polygon.ndvi      iqr.blue     
 Min.   :  1.0   Min.   : 217.0   Min.   :-0.35172   Min.   : 637.2  
 1st Qu.: 36.0   1st Qu.: 291.0   1st Qu.:-0.14835   1st Qu.:1647.5  
 Median : 97.0   Median : 538.0   Median :-0.08743   Median :2142.2  
 Mean   :113.5   Mean   : 606.8   Mean   :-0.12597   Mean   :2113.4  
 3rd Qu.:171.0   3rd Qu.: 848.0   3rd Qu.:-0.06814   3rd Qu.:2576.1  
 Max.   :425.0   Max.   :2106.0   Max.   :-0.03988   Max.   :4204.8  
   iqr.green         iqr.red          iqr.nir          iqr.ndvi      
 Min.   : 532.5   Min.   : 747.2   Min.   : 638.8   Min.   :0.07191  
 1st Qu.:1418.6   1st Qu.:1357.8   1st Qu.:1307.1   1st Qu.:0.28669  
 Median :1862.0   Median :1744.8   Median :1576.0   Median :0.41242  
 Mean   :1852.5   Mean   :1795.3   Mean   :1599.7   Mean   :0.39356  
 3rd Qu.:2281.8   3rd Qu.:2155.5   3rd Qu.:1848.2   3rd Qu.:0.47426  
 Max.   :3922.8   Max.   :4099.0   Max.   :3302.2   Max.   :0.75059  
 iqr_polygon.blue iqr_polygon.green iqr_polygon.red iqr_polygon.nir
 Min.   :1024     Min.   : 822      Min.   : 971    Min.   :1082   
 1st Qu.:1768     1st Qu.:1544      1st Qu.:1510    1st Qu.:1488   
 Median :2187     Median :1912      Median :1678    Median :1594   
 Mean   :2203     Mean   :1931      Mean   :1848    Mean   :1694   
 3rd Qu.:2503     3rd Qu.:2198      3rd Qu.:2086    3rd Qu.:1884   
 Max.   :4052     Max.   :3675      Max.   :3812    Max.   :2966   
 iqr_polygon.ndvi
 Min.   :0.1579  
 1st Qu.:0.3071  
 Median :0.4276  
 Mean   :0.4086  
 3rd Qu.:0.4660  
 Max.   :0.7096  
> 
> 
> 
> 
> #  Gradient Boosting Machines -----------------------------------------
> 
> #GBM
> 
> set.seed(123)
> seeds <- vector(mode = "list", length = 16)
> for(i in 1:16) seeds[[i]] <- sample.int(1000, 22)
> seeds[[16]] <- sample.int(1000, 1)
> seeds
[[1]]
 [1] 415 463 179 526 195 938 818 118 299 229 244  14 374 665 602 603 768 709  91
[20] 953 348 649

[[2]]
 [1] 989 355 840  26 519 426 649 766 211 932 590 593 555 871 373 844 143 544 490
[20] 621 775 905

[[3]]
 [1] 937 842  23 923 956 309 135 821 997 224 166 217 290 581  72 588 575 141 722
[20] 865 859 153

[[4]]
 [1] 294 277 463  41 431  90 316 223 528 116 606 774 747 456 598 854  39 159 752
[20] 209 374 818

[[5]]
 [1]  34 516  13  69 895 755 409 308 278  89 928 537 983 291 424 880 286 908 671
[20] 121 110 158

[[6]]
 [1]  64 483 910 477 480 711  67 663 890 847  85 165 648  51  74 178 362 236 610
[20] 330 726 127

[[7]]
 [1] 972 212 686 785 958 814 310 931 744 878 243 862 847 792 113 983 619 903 477
[20] 975 151 666

[[8]]
 [1] 614 767 160 391 155 426   5 326 784 280 800 789 567 843 932 238 764 339  39
[20] 822 137 455

[[9]]
 [1] 738 560 589  83 696 879  39 196 769 680 286 606 500 985 784 344 310 459 944
[20]  20 872 195

[[10]]
 [1] 861 164  52 876 534 177 554 827  84 523 633 951 392 302 597 877 706 619 589
[20] 430 710 761

[[11]]
 [1] 712 428 672 250 804 429 398 528 983 381 545  40 936 522 473 200 978 125 265
[20] 775 903 186

[[12]]
 [1] 573 252 458 152 831  54 919 538 235 289 185 765 413 627 522 309 995 205 875
[20] 779 537 564

[[13]]
 [1] 794 391 409 727 346 160 468 509 920  57 457 617 357 279 270 878 646 347 129
[20] 218 618 881

[[14]]
 [1] 698 337 797  26 539 981 519 956 757 666 553 724 390 498 222 671 861 657 960
[20] 421  57 660

[[15]]
 [1] 163 985 238 673 578 516 330 225 389 117 537 648  55 217 597 557 658 682 415
[20] 134 711 957

[[16]]
[1] 945

> control <- trainControl(method="repeatedcv", 
+                         number=5, 
+                         repeats = 3,
+                         seeds = seeds,
+                         classProbs= TRUE, 
+                         summaryFunction = multiClassSummary,
+                         allowParallel = TRUE )
> 
> 
> # can be "Accuracy",   "logLoss", "ROC",   "Kappa"
> metric <- "logLoss"
> 
> gbmGrid <-  expand.grid(interaction.depth = c(1,3,5,7, 9), 
+                         n.trees = (1:50)*50, 
+                         shrinkage = c(0.001,0.01,0.1),
+                         n.minobsinnode = 10)
> 
> set.seed(825)
> gbm <- train(land_use~., 
+              data=dta1, 
+              method="gbm", 
+              metric=metric, 
+              tune_grid=gbmGrid,
+              trControl=control)
Something is wrong; all the logLoss metric values are missing:
    logLoss         AUC          prAUC        Accuracy       Kappa    
 Min.   : NA   Min.   : NA   Min.   : NA   Min.   : NA   Min.   : NA  
 1st Qu.: NA   1st Qu.: NA   1st Qu.: NA   1st Qu.: NA   1st Qu.: NA  
 Median : NA   Median : NA   Median : NA   Median : NA   Median : NA  
 Mean   :NaN   Mean   :NaN   Mean   :NaN   Mean   :NaN   Mean   :NaN  
 3rd Qu.: NA   3rd Qu.: NA   3rd Qu.: NA   3rd Qu.: NA   3rd Qu.: NA  
 Max.   : NA   Max.   : NA   Max.   : NA   Max.   : NA   Max.   : NA  
 NA's   :9     NA's   :9     NA's   :9     NA's   :9     NA's   :9    
    Mean_F1    Mean_Sensitivity Mean_Specificity Mean_Pos_Pred_Value
 Min.   : NA   Min.   : NA      Min.   : NA      Min.   : NA        
 1st Qu.: NA   1st Qu.: NA      1st Qu.: NA      1st Qu.: NA        
 Median : NA   Median : NA      Median : NA      Median : NA        
 Mean   :NaN   Mean   :NaN      Mean   :NaN      Mean   :NaN        
 3rd Qu.: NA   3rd Qu.: NA      3rd Qu.: NA      3rd Qu.: NA        
 Max.   : NA   Max.   : NA      Max.   : NA      Max.   : NA        
 NA's   :9     NA's   :9        NA's   :9        NA's   :9          
 Mean_Neg_Pred_Value Mean_Precision  Mean_Recall  Mean_Detection_Rate
 Min.   : NA         Min.   : NA    Min.   : NA   Min.   : NA        
 1st Qu.: NA         1st Qu.: NA    1st Qu.: NA   1st Qu.: NA        
 Median : NA         Median : NA    Median : NA   Median : NA        
 Mean   :NaN         Mean   :NaN    Mean   :NaN   Mean   :NaN        
 3rd Qu.: NA         3rd Qu.: NA    3rd Qu.: NA   3rd Qu.: NA        
 Max.   : NA         Max.   : NA    Max.   : NA   Max.   : NA        
 NA's   :9           NA's   :9      NA's   :9     NA's   :9          
 Mean_Balanced_Accuracy
 Min.   : NA           
 1st Qu.: NA           
 Median : NA           
 Mean   :NaN           
 3rd Qu.: NA           
 Max.   : NA           
 NA's   :9             
Error: Stopping
In addition: There were 46 warnings (use warnings() to see them)
Execution halted
